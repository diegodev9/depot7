"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CodeActions = void 0;
const node_1 = require("vscode-languageserver/node");
class CodeActions {
    constructor(documentService, project) {
        this.documentService = documentService;
        this.project = project;
    }
    onCodeAction(params) {
        const textDocument = this.documentService.get(params.textDocument.uri);
        if (textDocument === undefined)
            return undefined;
        if (params.context.diagnostics.length === 0)
            return undefined;
        const diagnostics = params.context.diagnostics.filter((diagnostic) => diagnostic.code === "stimulus.controller.invalid");
        if (diagnostics.length === 0)
            return undefined;
        return diagnostics.flatMap(diagnostic => {
            const { identifier, suggestion } = diagnostic.data;
            const manyRoots = this.project.controllerRoots.length > 1;
            const updateTitle = `Replace "${identifier}" with suggestion: "${suggestion}"`;
            const updateReferenceAction = node_1.CodeAction.create(updateTitle, node_1.Command.create(updateTitle, "stimulus.controller.update", identifier, diagnostic, suggestion), node_1.CodeActionKind.QuickFix);
            return [
                updateReferenceAction,
                ...this.project.controllerRoots.map(root => {
                    const folder = `${manyRoots ? ` in "${root}/"` : ''}`;
                    const title = `Create "${identifier}" Stimulus Controller${folder}`;
                    return node_1.CodeAction.create(title, node_1.Command.create(title, "stimulus.controller.create", identifier, diagnostic, root), node_1.CodeActionKind.QuickFix);
                })
            ];
        });
    }
}
exports.CodeActions = CodeActions;
//# sourceMappingURL=code_actions.js.map