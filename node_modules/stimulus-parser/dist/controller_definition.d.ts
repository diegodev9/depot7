import { Project } from "./project";
type ValueDefinitionValue = Array<any> | boolean | number | object | string | undefined;
type ValueDefinition = {
    type: string;
    default: ValueDefinitionValue;
};
export declare const defaultValuesForType: {
    [key: string]: ValueDefinitionValue;
};
export declare class ControllerDefinition {
    readonly path: string;
    readonly project: Project;
    methods: Array<string>;
    targets: Array<string>;
    classes: Array<string>;
    values: {
        [key: string]: ValueDefinition;
    };
    parseError?: string;
    static controllerPathForIdentifier(identifier: string): string;
    constructor(project: Project, path: string);
    get controllerPath(): string;
    get identifier(): string;
    get isNamespaced(): boolean;
    get namespace(): string;
}
export {};
